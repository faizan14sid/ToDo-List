{"version":3,"sources":["Todo.js","App.js","reportWebVitals.js","index.js"],"names":["Todo","props","className","onClick","onSelect","id","items","App","useState","todolist","setTodolist","setItems","deleteItems","oldItems","filter","arrElem","index","type","placeholder","onChange","e","target","value","map","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iMA0BeA,EAvBF,SAACC,GACZ,OACE,mCACA,qBAAKC,UAAU,aAAf,SAEE,+BACA,wBAAQA,UAAU,SACdC,QAAS,WACPF,EAAMG,SAASH,EAAMI,KAF3B,eAOG,IACAJ,EAAMK,cCqCAC,EAlDH,WACV,MAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAA0BF,mBAAS,IAAnC,mBAAOF,EAAP,KAAcK,EAAd,KAUMC,EAAc,SAACP,GACnBM,GAAS,SAACE,GACR,OAAOA,EAASC,QAAO,SAACC,EAASC,GAC/B,OAAOA,IAAUX,SAKvB,OAAQ,mCACN,qBAAKH,UAAU,MAAf,SACE,sBAAKA,UAAU,gBAAf,UACE,uBACA,0CACA,uBACA,uBACAe,KAAK,OACLC,YAAY,aACZC,SAzBiB,SAACC,GACtBV,EAAYU,EAAEC,OAAOC,QAyBjBA,MAAOb,IAET,wBAAQN,QAzBU,WACpBQ,GAAS,SAACE,GACR,MAAM,GAAN,mBAAWA,GAAX,CAAqBJ,MACpBC,EAAY,MAsBb,eACA,6BACIJ,EAAMiB,KAAI,SAACjB,EAAOU,GAClB,OACC,6BACE,cAAC,EAAD,CACAX,GAAIW,EAAOV,MAAOA,EACjBF,SAAUQ,GAFAI,kBC7BTQ,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.c4e83fb9.chunk.js","sourcesContent":["import React from \"react\";\nimport './App.css';\n\nconst Todo = (props) => {\n  return (\n    <>\n    <div className=\"todo_style\">\n      \n      <li>\n      <button className=\"delete\"\n          onClick={() => {\n            props.onSelect(props.id);\n          }}\n        >\n          -\n        </button>\n        {\" \"}\n        {props.items} \n       \n      </li>\n      \n    </div>\n    </>\n  );\n};\n\nexport default Todo;\n","import \"./App.css\";\nimport React, { useState } from \"react\";\nimport Todo from \"./Todo\";\n\nconst App = () => {\n  const [todolist, setTodolist] = useState(\"\");\n  const [items, setItems] = useState([]);\n\n  const handleOnChange = (e) => {\n    setTodolist(e.target.value);\n  };\n  const handleOnClick = () => {\n    setItems((oldItems) => {\n      return [...oldItems, todolist];\n    }, setTodolist(\"\"));\n  };\n  const deleteItems = (id) => {\n    setItems((oldItems) => {\n      return oldItems.filter((arrElem, index) => {\n        return index !== id;\n      });\n    });\n  };\n\n  return (<>\n    <div className=\"App\">\n      <div className=\"app_container\">\n        <br/>\n        <h1>ToDo App</h1>\n        <br/>\n        <input\n        type=\"text\"\n        placeholder=\"Add a item\"\n        onChange={handleOnChange}\n        value={todolist}\n      />\n      <button onClick={handleOnClick}>+</button>\n      <ol>\n         {items.map((items, index) => {\n          return (\n           <li>\n             <Todo key={index}\n             id={index} items={items}\n              onSelect={deleteItems} />\n           </li> \n          );\n        })}\n      \n      </ol>\n      </div>\n    </div>\n    </>\n  );\n};\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}